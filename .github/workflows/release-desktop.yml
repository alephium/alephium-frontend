name: Release desktop wallet

on:
  push:
    tags: ['alephium-desktop-wallet@[0-9]+.[0-9]+.[0-9]+*']

jobs:
  release-desktop-wallet:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install NPM dependencies
        run: pnpm install

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
          echo '${{ secrets.mac_certs }}' | base64 -d > applecert.p12

      - name: Extract platform name
        id: get-os
        run: echo "os=$(echo ${{ matrix.os }} | cut -d- -f1)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        if: startsWith(matrix.os, 'ubuntu')

      - name: Build & release Electron app
        uses: nop33/action-electron-builder@v1.8.1
        if: ${{ startsWith(github.ref, 'refs/tags/alephium-desktop-wallet@') }}
        with:
          package_root: 'apps/desktop-wallet'
          build_script_name: 'ci:build:${{ steps.get-os.outputs.os }}'
          is_monorepo: true
          release: true
          github_token: ${{ secrets.github_token }}
          mac_certs: ${{ secrets.MAC_CERTS }}
          mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLEID: ${{ secrets.APPLE_ID }}
          APPLEIDPASS: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
          ES_USERNAME: ${{ secrets.ES_USERNAME }}
          ES_PASSWORD: ${{ secrets.ES_PASSWORD }}
          CREDENTIAL_ID: ${{ secrets.CREDENTIAL_ID }}
          ES_TOTP_SECRET: ${{ secrets.ES_TOTP_SECRET }}
